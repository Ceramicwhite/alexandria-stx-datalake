version: "3.9"
services:
  postgres:
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    container_name: $DB_HOST
    restart: on-failure
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_DB=${DB_DATABASE:-stacks-data-lake}
      - POSTGRES_PORT=${DB_port:-5432}
    volumes:
      - ./persistent-data/postgres/${DB_HOST}:/var/lib/postgresql/data
      - ./src/database/migration.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - default
  alexandria-indexer:
    build: ./
    container_name: alexandria-datalake
    restart: on-failure
    env_file:
      - .env
    environment:
      - STACKS_NODE_API_URL=${STACKS_NODE_API_URL:-https://stacks-node-api.mainnet.stacks.co/}
      - STREAM_HISTORICAL_DATA=${STREAM_HISTORICAL_DATA:-true}
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:postgres@postgres:5432/stacks-data-lake}
    networks:
      - default
    depends_on:
      - postgres
  graphql-engine:
    image: hasura/graphql-engine:latest
    container_name: graphql-engine
    restart: on-failure
    environment:
      HASURA_GRAPHQL_DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@postgres:5432/stacks-data-lake}
      HASURA_GRAPHQL_ENABLE_CONSOLE: ${HASURA_GRAPHQL_ENABLE_CONSOLE:-true}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET:-myadminsecretkey}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: ${HASURA_GRAPHQL_UNAUTHORIZED_ROLE:-user}
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
    ports:
      - "8080:8080"
    networks:
      - default
    depends_on:
      - postgres
networks:
  default:
    name: ${DOCKER_NETWORK}
    ipam:
      driver: default
      
